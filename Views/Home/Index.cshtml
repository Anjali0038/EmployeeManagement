@model EmployeeManagement.Models.LeaveViewModel
@{
}
<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Podkova&family=Roboto:wght@400;700&display=swap"
          rel="stylesheet" />
    @*<link rel="stylesheet" href="./fontawesome-free-5.15.4-web/css/all.min.css" />*@
    <link rel="stylesheet" href="~/css/style.css" />
    <link rel="stylesheet" href="~/css/dashboard.css" />
    <style>
        .dashboard-section {
            margin: 0.5em auto;
            padding: 0 1em;
            width: 100%;
            height: auto;
            position: relative;
            
        }
        .leaveDayColor{
            color:red;
        }
    </style>
    <title>Employee-List</title>

    @using Microsoft.AspNetCore.Identity
    @using EmployeeManagement.Areas.Identity.Data
    @inject SignInManager<ApplicationUser> SignInManager
    @inject UserManager<ApplicationUser> UserManager
    @using Microsoft.AspNetCore.Http
    @inject IHttpContextAccessor HttpContextAccessor
    @using System.Globalization
    @using EmployeeManagement.Models
</head>
@{
    string role = HttpContextAccessor.HttpContext.Session.GetString("Role");
    int eid = Model.EId;
}
<div class="dashboard-section">
    <div class="employee-full-container">
        <div class="calender-event-container">
            <div style="display: flex; flex-direction: column;justify-content: space-evenly; margin-top: 16px; ">
                <div class="date-events">
                    <div class="date">
                        <h3 class="two"></h3>
                    </div>
                    <div class="events"></div>
                </div>
                <div></div>
                <div class="lebal-container">
                    <ul class="lebal">
                        <li> <span><i class="fas fa-circle overtime"></i></span>overtime</li>
                        <li><span><i class="fas fa-circle today"></i></span>Today</li>
                        <li><span><i class="fas fa-circle late"></i></span>late</li>
                    </ul>
                    <ul class="lebal">
                        <li><span><i class="fas fa-circle pday"></i></span>public holiday</li>
                        <li><span><i class="fas fa-circle hday"></i></span>Weekends</li>
                        <li><span><i class="fas fa-circle sick"></i></span>Sick</li>
                    </ul>
                </div>
            </div>
            <div class="calender">
                <section class="new">
                    <section>
                        <!-- (B) THE HTML
                        (B1) INLINE DATE PICKER -->
                        <input type="hidden" id="input-inline" placeholder="Inline" />
                        <div id="pick-inline"></div>

                        <!-- (B2) POPUP DATE PICKER -->
                        <input type="hidden" id="input-pop" placeholder="Popup" ` />
                    </section>
                </section>
            </div>
        </div>
        <div class="button-content-container">
            <div class="employee-approve-leave-button">
                <div class="requestedbtn">
                    <button asp-controller="Home" asp-action="Index">Requested Leave</button>
                </div>
                <div class="btnsectiono">
                    <button>Approved Leave</button>
                </div>
            </div>
            <div class="date-events">
                <div id="leaveList" class="leave-list">
                    <div>
                        <p>Requested Leave</p>
                    </div>
                    @if (User.IsInRole("Admin"))
                    {
                        @foreach (var leave in Model.LeaveList)
                        {
                            <div class="date-reason">
                                <div class="date-requested">
                                    <div>
                                        <p>@leave.LeaveDate.Day</p>
                                        <span>@leave.LeaveDate.ToString("MMM")@*.ToString("MMM", CultureInfo.InvariantCulture)*@</span>
                                    </div>
                                </div>
                                <div class="reason-details">@leave.LeaveReason</div>
                            </div>
                        }
                    }
                    else
                    {
                        @foreach (var leave in Model.LeaveList)
                        {
                            if (leave.EId == UserManager.GetUserAsync(User).Result.EId)
                            {
                                <div class="date-reason">
                                    <div class="date-requested">
                                        <div>
                                            <p>@leave.LeaveDate.Day</p>
                                            <span>@leave.LeaveDate.ToString("MMM")@*.ToString("MMM", CultureInfo.InvariantCulture)*@</span>
                                        </div>
                                    </div>
                                    <div class="reason-details">@leave.LeaveReason</div>
                                </div>
                            }
                        }
                    }
                </div>
                <div id="approveList" class="approved-list">
                    <div>
                        <p>Approved Leave</p>
                    </div>
                    @if (User.IsInRole("Admin"))
                    {
                        @foreach (var leave in Model.LeaveList)
                        {
                            if (leave.LeaveStatus == true)
                            {
                                <div class="date-reason">
                                    <div class="date-requested">
                                        <div>
                                            <p>@leave.LeaveDate.Day</p>
                                            <span>@leave.LeaveDate.ToString("MMM")</span>
                                        </div>
                                    </div>
                                    <div class="reason-details">@leave.LeaveReason</div>
                                </div>
                            }
                        }
                    }
                    else
                    {
                        @foreach (var leave in Model.LeaveList)
                        {
                            if (leave.EId == UserManager.GetUserAsync(User).Result.EId)
                            {
                                if (leave.LeaveStatus == true)
                                {
                                    <div class="date-reason">
                                        <div class="date-requested">
                                            <div>
                                                <p>@leave.LeaveDate.Day</p>
                                                <span>@leave.LeaveDate.ToString("MMM")</span>
                                            </div>
                                        </div>
                                        <div class="reason-details">@leave.LeaveReason</div>
                                    </div>
                                }
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/js/dashboard.js"></script>
<script src="~/js/calender.js"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>

<script>

    let leavestn = document.querySelector("#leaveList");
    console.log(leavestn);

    let approvestn = document.querySelector("#approveList");
    console.log(approvestn);
    let btnsectionfordiv = document.querySelector(".btnsectiono");
    console.log(btnsectionfordiv);
    let requestbtn = document.querySelector(".requestedbtn");
    console.log(requestbtn);

    btnsectionfordiv.addEventListener("click", () => {
        leavestn.style.display = "none";
        approvestn.style.display = "block";
    });
    requestbtn.addEventListener("click", () => {
        leavestn.style.display = "block";
        approvestn.style.display = "none";
    });


    $(window).on('load', function () {
        debugger
        var selectedMonth = document.getElementsByClassName('picker-m')[0].selectedIndex;
        var yearSelect = document.getElementsByClassName('picker-y')[0];
        var selectedYear = yearSelect.options[yearSelect.selectedIndex].value;

        $.ajax({
            type: "Get",
            url: "/Home/HolidayCalender",
            data: { year: selectedYear, month: selectedMonth },
            dataType: "json",
            success: function (response) {
                var rows = document.getElementsByTagName("table")[0].rows;
                response.forEach(function (d) {
                    day = d.day;
                    status = d.status;
                    type = d.type;
                    noOfDays = d.noOfDays;
                    var rows = document.getElementsByTagName("table")[0].rows;
                    let flag = false;

                    for (var i = 2; i < rows.length; i++) {
                        if (flag) {
                            break;
                        }
                        var cellLength = rows[i].cells.length;
                        var lastCell = rows[i].cells[cellLength - 1];
                        if (parseInt(lastCell.innerHTML) >= parseInt(day)) {
                            for (var j = 0; j < cellLength; j++) {
                                if (rows[i].cells[j].innerHTML == day) {
                                    rows[i].cells[j].classList.add('leaveDayColor');
                                    noOfDays--;
                                    day++;
                                    if (noOfDays == 0) {
                                        flag = true;
                                    }
                                }
                                if (flag) {
                                    break;
                                }
                            }
                        }
                    }
                });

                //for (let x in response)
                //{
                //    day = x.day;
                //    status = x.status;
                //    type = x.type;
                //    for (let i=2 in rows, i++) {
                //        let row = rows.rows[i];
                //        for (var j = 0; i < rows.cells; i++)
                //        for (let j in row.cells) {
                //            let col = row.cells[j]
                //            //let lastcell = cells.length - 1;
                //            var lastcell = last.cells[6];
                //            //if (col == day)
                //            //{
                //            //    return status;
                //            //}
                //            //elseif(day < col)
                //            //{

                //            //}
                //        }
                //    }
                //}
                //row[].cells[]
                //var value = cell.innerHTML;

                alert(response.responseText);
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    });



</script>